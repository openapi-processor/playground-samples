openapi: 3.1.0
info:
  title: DTOs
  version: '1'

paths:

  /foo:
    get:
      parameters:
        - name: foo
          description: parameter dto
          in: query
          schema:
            $ref: '#/components/schemas/Foo'
      responses:
        '200':
          description: object response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'

  /oneof:
    get:
      responses:
        '200':
          description: oneOf
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooFoo'

components:
  schemas:

    Foo:
      type: object
      properties:
        foo:
          type: string
        bar:
          type: integer
          format: int64

    # a schema with allOf creates single flattened DTO
    Bar:
      type: object
      allOf:
        - type: object
          properties:
            foo1:
              type: string
        - type: object
          properties:
            foo2:
              type: string
      properties:
        bar:
          type: string


    # if the one-of-interface option is true a marker interface FooOneOf will be generated,
    # otherwise the processor will use Object.
    FooFoo:
      type: object
      properties:
        foo:
          $ref: '#/components/schemas/FooOneOf'

    FooOneOf:
      oneOf:
        - $ref: '#/components/schemas/FooOne'
        - $ref: '#/components/schemas/FooTwo'

    FooOne:
      type: object
      properties:
        one:
          type: string

    FooTwo:
      type: object
      properties:
        two:
          type: string
